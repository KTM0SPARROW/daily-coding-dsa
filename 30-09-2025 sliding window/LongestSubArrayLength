Problem Statement-->Dynamic Size window problem
    Find the length of the longest subarray whose sum is â‰¤ K.where the array contains only positive integrs.

Input: arr = [1,2,3,4,5], K=8
Output: 3 ([1,2,3])

Approahes
1-->checking every suarray and sum<k ,then updating max_length-->T>C-->O(n*n)

2-->two Pointer -sliding window Approach-->T.C-->O(n)-->S.C-->O(1)

Code-->
import java.util.*;
public class Main4
{
	public static void main(String[] args) {
	    Scanner sc=new Scanner(System.in);
	    int n=sc.nextInt();
		int[] arr = new int[n];
		for(int i=0;i<n;i++)
		{
		    arr[i]=sc.nextInt();
		}
        int k = sc.nextInt(); 

        int result = longestSubarray(arr, k);
        System.out.println("Maximun length"+result);
	}
	static int longestSubarray(int arr[],int k)
	{
	   int st=0;
	   int max_length=0;
	   int sum=0;
	   for(int end=0;end<arr.length;end++)
	   {
	       sum=sum+arr[end];
	       while(sum>k)
	       {
	          sum=sum-arr[st];
	          st++;
	       }
	   max_length=Math.max(max_length,end-st+1);
	   }
	   return max_length;
	}
}



